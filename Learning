*Выведите поле name из таблицы Passenger.*
SELECT name FROM Passenger

*Выведите поля member_id, member_name и status из таблицы FamilyMembers.*
SELECT member_id, member_name, status FROM FamilyMembers

*Выведите все столбцы из таблицы Payments.*
SELECT * FROM Payments

*Выполните предложенный ниже запрос, чтобы увидеть список пассажиров. Если присмотреться, то можно увидеть, что пассажир с именем Bruce Willis присутствует здесь дважды (в начале и конце списка).
Ваша задача заключается в том, чтобы вывести только уникальные имена пассажиров, дополнив предложенный запрос.*
SELECT DISTINCT name FROM Passenger D

*Выведите идентификаторы товаров (поле good) из таблицы Payments, стоимость которых больше 2000 единиц. Стоимость товара хранится в поле unit_price.*
SELECT good FROM Payments WHERE unit_price > 2000

*Выведите имена (поле member_name) членов семьи из таблицы FamilyMembers, чей статус (поле status) равен "father".*
SELECT member_name FROM FamilyMembers WHERE status = 'father'

*Выведите имя (поле member_name) и дату рождения (поле birthday) членов семьи из таблицы FamilyMembers, чей статус (поле status) равен "father" или "mother".*
SELECT member_name, birthday FROM FamilyMembers WHERE status = 'mother' or status = 'father'

*Необходимо получить все комнаты, в которых есть как кухня (поле has_kitchen), так и интернет (поле has_internet). 
Напишите запрос, удовлетворяющий вышеописанному условию, который выводит все поля из таблицы Rooms. Наличие обозначается 1 или true, а отсутствие 0 или false.*
SELECT * FROM Rooms WHERE has_internet = TRUE and has_kitchen = TRUE

*Выведите резервации комнат (поля room_id, start_date, end_date) из таблицы Reservations, у которых итоговая стоимость аренды (поле total) находится в промежутке от 500 до 1200 включительно.*
SELECT room_id, start_date, end_date FROM Reservations WHERE total BETWEEN 500 and 1200

*Выведите всех членов семьи с фамилией "Quincey".*
SELECT member_name FROM FamilyMembers WHERE member_name LIKE '% Quincey'

*Для каждого отдельного платежа выведите идентификатор товара и сумму, потраченную на него, в отсортированном по убыванию этой суммы виде. Список платежей находится в таблице Payments.
Для вывода суммы используйте псевдоним sum.*
SELECT good, unit_price * amount as sum FROM Payments ORDER BY sum DESC

*Выведите список членов семьи с фамилией Quincey, в отсортированном по возрастанию столбцам status и member_name виде.*
SELECT * FROM FamilyMembers WHERE member_name LIKE '% Quincey' ORDER BY status, member_name

*Подсчитайте количество учеников в каждом классе, а также отсортируйте их по убыванию количества учеников. Принадлежность ученика к конкретному классу вы можете 
получить из таблицы Student_in_class. В качестве результата необходимо вывести идентификатор класса (поле class) и количество учеников в этом классе.*
SELECT class, COUNT(id) AS count FROM Student_in_class GROUP BY class ORDER BY count DESC

*Найдите самых старших членов семьи (используйте поле birthday) среди всех существующих семей на основании их статуса (поле status). Выведите статус и дату рождения.*
SELECT status, MIN(birthday) as birthday FROM FamilyMembers GROUP BY status

*Получите среднее время полётов, совершённых на каждой из моделей самолёта. Выведите поле plane и среднее время полёта в секундах. Для вывода времени используйте 
псевдоним time. Используйте функцию TIMESTAMPDIFF(second, time_out, time_in), чтобы получить разницу во времени в секундах между двумя датами.*
SELECT plane, AVG(TIMESTAMPDIFF(second, time_out, time_in)) as time FROM Trip GROUP BY plane 

*Выведите идентификатор комнаты (поле room_id), среднюю стоимость за один день аренды (поле price, для вывода используйте псевдоним avg_price), 
а также количество резерваций этой комнаты (используйте псевдоним count). Полученный результат отсортируйте в порядке убывания сначала по количеству резерваций, 
а потом по средней стоимости.*
SELECT room_id, AVG(price) as avg_price, COUNT(room_id) as count FROM Reservations GROUP BY room_id ORDER BY count DESC, avg_price DESC

*Дополните запрос из предыдущего задания, оставив в выборке только те комнаты, чья средняя стоимость аренды превышает 150 ед.*
SELECT room_id, AVG(price) as avg_price, COUNT(room_id) as count FROM Reservations GROUP BY room_id HAVING avg_price > 150 ORDER BY count DESC, avg_price DESC 

*Объедините таблицы Class и Student_in_class с помощью внутреннего соединения по полям Class.id и Student_in_class.class.
Выведите название класса (поле Class.name) и идентификатор ученика (поле Student_in_class.student).*
SELECT Class.name, Student_in_class.student FROM Class INNER JOIN Student_in_class ON Class.id = Student_in_class.class

*Дополните запрос из предыдущего задания, добавив ещё одно внутреннее соединение с таблицей Student. Объедините по полям Student_in_class.student и Student.id и 
вместо идентификатора ученика выведите его имя (поле first_name).*
SELECT Class.name, Student.first_name FROM Class 
INNER JOIN Student_in_class ON Class.id = Student_in_class.class
INNER JOIN Student ON Student_in_class.student = Student.id

*Выведите названия продуктов, которые покупал член семьи со статусом "son". Для получения выборки вам нужно объединить таблицу Payments с таблицей FamilyMembers 
по полям family_member и member_id, а также с таблицей Goods по полям good и good_id.*
SELECT good_name FROM Payments 
INNER JOIN FamilyMembers ON family_member = member_id
INNER JOIN Goods ON Payments.good = Goods.good_id
WHERE status = 'son'

*Выведите идентификатор (поле room_id) и среднюю оценку комнаты (поле rating, для вывода используйте псевдоним avg_score), составленную на основании отзывов из таблицы 
Reviews. Данная таблица связана с Reservations (таблица, где вы можете взять идентификатор комнаты) по полям reservation_id и Reservations.id.*
SELECT Reservations.room_id, AVG(rating) as avg_score FROM Reservations
INNER JOIN Rooms ON Reservations.room_id = Rooms.id
INNER JOIN Reviews ON Reservations.id = Reviews.reservation_id
GROUP BY Reservations.room_id

*Отсортируйте список компаний (таблица Company) по их названию в алфавитном порядке и выведите первые две записи.*
SELECT * FROM Company ORDER BY name LIMIT 2

*Выведите начало (поле start_pair) и окончание (поле end_pair) второго и третьего занятия из таблицы Timepair.*
SELECT start_pair, end_pair FROM Timepair LIMIT 1,2

*Выведите количество полётов каждого пассажира, представленного в таблице Passenger. Список полётов находится в таблице Pass_in_trip.
В качестве результата выведите количество полётов (используйте псевдоним count) и имя пассажира.*
SELECT (SELECT COUNT(pit.id) FROM Pass_in_trip AS pit 
WHERE p.id = pit.passenger) AS count, p.name
FROM Passenger AS p

*Столбцовые подзапросы с выражением IN
Выведите названия товаров из таблицы Goods (поле good_name), которые ещё ни разу не покупались ни одним из членов семьи (таблица Payments).*
SELECT good_name FROM Goods WHERE Goods.good_id NOT IN (SELECT good FROM Payments)

*Выведите список комнат (все поля, таблица Rooms), которые по своим удобствам (has_tv, has_internet, has_kitchen, has_air_con) 
совпадают с комнатой с идентификатором "11".*
SELECT * FROM Rooms
WHERE (has_tv, has_internet, has_kitchen, has_air_con) = 
    (   SELECT has_tv, has_internet, has_kitchen, has_air_con
        FROM Rooms WHERE id = 11
    );
    
*Измените запрос так, чтобы удалить товары (Goods), имеющие тип деликатесов (delicacies).*
DELETE Goods FROM Goods JOIN GoodTypes ON Goods.type = GoodTypes.good_type_id WHERE GoodTypes.good_type_name = "delicacies"

*Выведите имена (поле member_name) всех членом семьи (таблица FamilyMembers) в верхнем регистре. Для вывода имени используйте псевдоним name.*
SELECT UPPER(member_name) as name FROM FamilyMembers

*Выведите идентификаторы (поле good_id) всех товаров, дополнив идентификаторы незначащими нолями слева до 2-х знаков.*
SELECT LPAD(good_id,2,0) as ids FROM Goods

*Выведите среднюю стоимость бронирования для комнат, которых бронировали хотя бы один раз. Среднюю стоимость необходимо округлить до целого значения вверх.
В качестве результата выведите id комнаты и среднюю стоимость бронирования (используйте псевдоним avg_price).*
SELECT room_id, CEILING(AVG(price)) AS avg_price FROM Reservations GROUP BY room_id

*Выведите id тех комнат, которые арендовали нечетное количество раз.
В качестве результата выведите id комнаты и количество раз сколько ее брали в аренду (используйте псевдоним count).*
SELECT * FROM (
    SELECT room_id, COUNT(room_id) AS count 
    FROM Reservations 
    GROUP BY room_id) as pt
WHERE MOD(pt.count, 2) = 1
